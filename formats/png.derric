/* Copyright 2011-2012 Netherlands Forensic Institute and
                       Centrum Wiskunde & Informatica

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

format png
extension png

strings ascii
sign false
unit byte
size 1
type integer
endian big

sequence
  Signature
  IHDR
  (cHRM gAMA iCCP sBIT sRGB pHYs sPLT tIME iTXt tEXt zTXt)*
  PLTE?
  (bKGD hIST tRNS pHYs sPLT tIME iTXt tEXt zTXt)*
  IDAT
  IDAT*
  (tIME iTXt tEXt zTXt)*
  IEND

structures
Signature { /* Signature, header for all PNG files. */
  marker: 137, 80, 78, 71, 13, 10, 26, 10;
}

Chunk { /* Base class for all PNG data structures, except Signature. */
  length: lengthOf(chunkdata) size 4;
  chunktype: size 4;
  chunkdata: size length;
  crc: checksum(algorithm="crc32-ieee",
                init="allone",
                start="lsb",
                end="invert",
                store="msbfirst",
                fields=chunktype+chunkdata)
       size 4;
}

IHDR = Chunk { /* Header, describes general image metadata. */
  chunktype: "IHDR";
  chunkdata: {
    width: !0 size 4;
    height: !0 size 4;
    bitdepth: 1|2|4|8|16;
    colourtype: 0|2|3|4|6;
    compression: 0;
    filter: 0;
    interlace: 0|1;
  }
}

IDAT = Chunk { /* Data, contains the actual (compressed) image data. */
  chunktype: "IDAT";
  chunkdata: compressed(algorithm="deflate",
                        layout="zlib")
             size length;
}

IEND { /* End, footer. */
  length: 0 size 4;
  chunktype: "IEND";
  crc: 0xAE, 0x42, 0x60, 0x82; /* Since length is 0, this is always the crc of an empty buffer. */
}

PLTE = Chunk {
  chunktype: "PLTE";
}

cHRM = Chunk {
  chunktype: "cHRM";
}

gAMA = Chunk {
  chunktype: "gAMA";
}

iCCP = Chunk {
  chunktype: "iCCP";
}

sBIT = Chunk {
  chunktype: "sBIT";
}

sRGB = Chunk {
  chunktype: "sRGB";
}

bKGD = Chunk {
  chunktype: "bKGD";
}

hIST = Chunk {
  chunktype: "hIST";
}

tRNS = Chunk {
  chunktype: "tRNS";
}

pHYs = Chunk {
  chunktype: "pHYs";
}

sPLT = Chunk {
  chunktype: "sPLT";
}

tIME = Chunk {
  chunktype: "tIME";
}

iTXt = Chunk {
  chunktype: "iTXt";
}

tEXt = Chunk {
  chunktype: "tEXt";
}

zTXt = Chunk {
  chunktype: "zTXt";
}